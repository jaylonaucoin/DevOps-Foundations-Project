# TODO: Define the Workflow Name
name: CI/CD Pipeline

# TODO: Define triggers for the workflow
on:
   push:
     branches: main
   pull_request:
     branches: main

jobs:
  # TODO: Define a job for building and testing the frontend
  frontend:
    runs-on: ubuntu-latest
    steps:
      # TODO: Checkout code
    - name: Checkout code
    - uses: actions/checkout@v2
      # TODO: Setup Node.js
    - name: Setup Node.js
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
      # TODO: Install dependencies
    - name: Install dependencies
    - run: npm install
      # TODO: Run tests
    - name: Run tests
    - run: npm test
      # TODO: Build the React app
    - name: Build the React app
    - run: npm run build

  # TODO: Define a job for building and testing the backend
  backend:
    runs-on: ubuntu-latest
    steps:
      # TODO: Checkout code
    - name: Checkout code
    - uses: actions/checkout@v2
      # TODO: Setup Python
    - name: Setup Python
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'
      # TODO: Install dependencies
    - name: Install dependencies
    - run: pip install -r backend/requirements.txt
      # TODO: Run tests
    - name: Run tests
    - run: pytest

  # TODO: Define a job for building and pushing Docker images
  docker:
    # Run this job only when 'frontend' & 'backend' stages are sucessfully completed
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    steps:
      # TODO: Checkout code
    - name: Checkout code
    - uses: actions/checkout@v2
      # TODO: Setup Docker
    - name: Setup Docker
    - uses: docker/setup-action@v2
      # TODO: Build frontend Docker image
    - name: Build frontend Docker image
    - run: docker build -t frontend:latest frontend
      # TODO: Build backend Docker image
    - name: Build backend Docker image
    - run: docker build -t backend:latest backend
      # TODO: Push images to Docker Hub (if on main branch)
    - name: Push images to Docker Hub
    - run: |
        if [ ${{ github.ref }} = 'refs/heads/main' ]; then
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker tag frontend:latest ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker tag backend:latest ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
        fi

  # OPTIONAL: Define a deployment job (if applicable)
#  deploy:
#    needs: docker
#    runs-on: ubuntu-latest
#    steps:
#      # TODO: Add deployment steps
